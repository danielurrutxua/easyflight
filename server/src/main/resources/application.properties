springdoc.api-docs.path=/api-docs

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:db}:3306/db_easyflight
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.username=root
spring.datasource.password=m4nd4l0r14n0
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true

# RESOURCES FILES
#useragents
file.name.useragents=useragents.csv

# BASE URLS FLIGHTS SCRAPING
url.flight.params={origin}-{destination}/{departure-date}/{num-adults}adults?sort=bestflight_a
url.flight.params.with.return={origin}-{destination}/{departure-date}/{arrival-date}/{num-adults}adults?sort=bestflight_a
#kayak
base.url.flights.kayak=https://www.kayak.es/flights/
#momondo
base.url.flights.momondo=https://momondo.es/flight-search/
# AIRPORTS DATA SOURCE
url.airports.code.list=https://www.nationsonline.org/oneworld/IATA_Codes/airport_code_list.htm


# SCRAPING CLASSNAMES
#kayak
cookies.close.popup=dDYU-close
loading.flights.ended=col-advice
departure.time=depart-time
arrival.time=arrival-time
airport.name=airport-name
scales.number=stops-text
scales.information=js-layover
airlines.names=codeshares-airline-names
flight.result=Base-Results-HorizonResult
price.text=price-text
provider.name=name-only-text
best.offer.url=col-best
kayak.base.url=kayak.es
